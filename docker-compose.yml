services:
  db:
    # Use a stable MySQL 8.4 image
    image: mysql:8.4
    container_name: car_project_db
    # This policy automatically restarts the container if it fails
    restart: unless-stopped
    environment:
      # These variables are used by the MySQL image to initialize the database
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: user               # Best practice: create a non-root user for the app
      MYSQL_PASSWORD: password         # Password for the non-root user
      MYSQL_ROOT_PASSWORD: 1234      # Password for the root user
    volumes:
      # This makes your database data persist
      - db_data:/var/lib/mysql
    healthcheck:
      # This check waits for the root user to be ready
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p1234"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: car_project_app
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      # Changed host port to 8009 to avoid conflicts with other projects
      - "8000:8000"
    environment:
      # These variables tell Django how to connect to the DB
      # They MUST match the MYSQL_USER and MYSQL_PASSWORD from the db service above
      - DB_NAME=mydatabase
      - DB_USER=user
      - DB_PASS=password
      - DB_HOST=db
      - DB_PORT=3306
    depends_on:
      db:
        # This waits for the database to be "healthy" before starting the app
        condition: service_healthy

volumes:
  # Defines the named volume for database persistence
  db_data: